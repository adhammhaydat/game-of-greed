from math import trunc
from game_of_greed.game_logic import GameLogic,Banker
class Game():
     
     def __init__(self):
         self.rolls=6
         self.round=1
    
     def play(self, roller = GameLogic.roll_dice):
      

        print("""Welcome to Game of Greed
(y)es to play or (n)o to decline""")
        start = input('> ').lower()
        if start != 'n' and start != 'no':
            banker = Banker()
            while True:
               
                print(f'Starting round {self.round}')
                while True:
                    if not self.rolls:
                        break

                    print(f"Rolling {self.rolls} dice...")
                    dice = roller(self.rolls)
                    str_dice = ' '.join(map(str, dice))
                    print(f'*** {str_dice.strip()} ***')
                    print('Enter dice to keep, or (q)uit:')
                    prompt = input("> ").lower()
                    if prompt == 'q' or prompt == 'quit':
                        print(f"Thanks for playing. You earned {banker.balance} points")
                        break
                    else:
                        shelve = [int(n) for n in prompt]
                        dice_remaining = len(dice) - len(shelve)
                        sum_shelved = GameLogic.calculate_score(shelve)
                        print(f"You have {sum_shelved} unbanked points and {dice_remaining} dice remaining")
                        print("(r)oll again, (b)ank your points or (q)uit:")
                        prompt = input("> ")
                        if prompt == "b":
                            banker.shelf(sum_shelved)
                            banker.bank()
                            print(f"You banked {sum_shelved} points in round {self.round}")
                            print(f"Total score is {banker.balance} points")
                            self.round+=1
                        elif prompt == "r":
                            new_roll=GameLogic.roll_dice(dice_remaining)
                            sum_remaning_tuple=GameLogic.calculate_score(new_roll)
                            self.rolls=dice_remaining
                            self.round +=1
                            continue      # rolling_with_rolles(sum_remaning_tuple)
                if not self.rolls:
                    self.rolls=6
                    continue

                         

        else:
            print('OK. Maybe another time')
            


if __name__ == "__main__":
    g=Game()
    g.play()


    #test////test